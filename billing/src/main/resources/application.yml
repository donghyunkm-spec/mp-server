server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /
  allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}

spring:
  application:
    name: billing-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:billing_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: ${REDIS_TIMEOUT:2000}
  security:
    user:
      name: ${SECURITY_USER:admin}
      password: ${SECURITY_PASSWORD:admin}

# Azure Service Bus configuration
azure:
  servicebus:
    connection-string: ${AZURE_SERVICEBUS_CONNECTION_STRING:}
    topic:
      billing-change: ${AZURE_SERVICEBUS_TOPIC_BILLING_CHANGE:billing-change-topic}
    subscription:
      billing-change: ${AZURE_SERVICEBUS_SUBSCRIPTION_BILLING_CHANGE:billing-service-subscription}

# KOS Adapter service configuration
kos-adapter:
  base-url: ${KOS_ADAPTER_BASE_URL:http://localhost:8083}

# Cache configuration
cache:
  billing-info:
    ttl-hours: ${CACHE_BILLING_INFO_TTL_HOURS:24}

# Logging
logging:
  level:
    com.ktds.mvne: ${LOG_LEVEL:DEBUG}
    com.ktds.mvne.billing: ${LOG_LEVEL:DEBUG}
    org.springframework: INFO

# Swagger
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  api-docs:
    path: /api-docs

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
      probe:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  metrics:
    tags:
      app: ${spring.application.name}
      instance: ${HOSTNAME:localhost}:${server.port}
    enable:
      all: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        cache.operation.time: true  # Cache 관련 타이머의 히스토그램 활성화
        kt.adapter.operation.time: true  # KT 어댑터 관련 타이머의 히스토그램 활성화
      sla:
        http.server.requests: 100ms, 500ms, 1000ms
        cache.operation.time: 50ms, 100ms, 300ms
        kt.adapter.operation.time: 50ms, 100ms, 300ms